{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js","robots.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","alignItems","children","ErrorBoundary","state","hasError","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","username","document","getElementById"],"mappings":"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","file":"static/js/main.bd46d4b5.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ name, email, id }) => {\n    return (\n        <div className='tc bg-light-green dib br3 pas3 ma2 grow bw2 shadow-5'>\n            <img alt ='robots' src={`https://robohash.org/${id}?200x200`} />\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n    return (\n        <div>\n           {\n                robots.map((user, i) => {\n                    return (\n                        <Card key={robots[i].id} \n                        id={robots[i].id} \n                        name={robots[i].name} \n                        email={robots[i].email}\n                        />\n                    );\n                })\n            }\n        </div>\n    )\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({ searchChange }) => {\n    return (\n        <div className='pa2'>\n            <input \n                className=\"pa3 ba b--green bg-lightest-blue\"\n                type='search' \n                placeholder='search robots'\n                onChange={searchChange} \n            />\n        </div>\n    );\n}\n\nexport default SearchBox;\n","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{overflowY: 'scroll', border: '1px solid black', height: '700px', alignItems: 'center'}}>\n            {props.children}\n        </div>\n    )\n};\n\nexport default Scroll;","import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch() {\n        this.setState({ hasError: true })\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return <h1>Oops. That's not good.</h1>\n        }\n        return this.props.children\n    }\n}\n\nexport default ErrorBoundary;","import React, { Component } from 'react';\nimport CardList from '../components/CardList'\nimport SearchBox from '../components/SearchBox'\nimport Scroll from '../components/Scroll'\nimport ErrorBoundary from '../components/ErrorBoundary'\nimport './App.css'\n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state = {\n            robots: [],\n            searchfield: ''    \n        }\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response=> {\n                return response.json();\n            })\n            .then(users => {\n                 this.setState({ robots: users })\n            });\n    }\n\n    onSearchChange = (event) => {\n        this.setState({ searchfield: event.target.value });\n    }\n\n    render () {\n        const { robots, searchfield } = this.state;\n        const filteredRobots = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n        })\n            return !robots.length ? \n            (\n                <div className='tc'>\n                    <h1 className=\"f1\">RoboFriends</h1>\n                    <h1 className=\"f2\">Loading...</h1>\n                </div>\n            ) :\n            (\n            !filteredRobots.length ?\n            (\n                <div className='tc'>\n                    <h1 className=\"f1\">RoboFriends</h1>\n                    <SearchBox searchChange={this.onSearchChange}/>\n                    <h1 className=\"f2\">NO ROBOFRIENDS FOUND</h1>\n                </div>\n            ):\n            (\n                <div className='tc'>\n                    <h1 className=\"f1\">RoboFriends</h1>\n                    <SearchBox searchChange={this.onSearchChange}/>\n                    <Scroll>\n                        <ErrorBoundary>\n                            <CardList robots = {filteredRobots} />\n                        </ErrorBoundary>\n                    </Scroll>\n                </div>\n            )\n        )};\n    }\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport { robots } from './robots';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App robots={robots}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const robots = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz'\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv'\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net'\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org'\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca'\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info'\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz'\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me'\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io'\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz'\n  }\n];\n"],"sourceRoot":""}